version: "3.6"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    image: joao0212/rinha-backend-2024:latest
    network_mode: host
    environment:
      - POSTGRES_HOST=8081
    depends_on:
     - db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    environment:
      - POSTGRES_HOST=8082

  nginx:
    image: nginx:latest
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  db:
    image: postgres:16.1
    command: postgres -c 'max_connections=15' -c 'fsync=off' -c 'synchronous_commit=off' -c 'checkpoint_timeout=1d' -c 'full_page_writes=false'
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=rinha
    network_mode: host
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.6"
          memory: "150MB"